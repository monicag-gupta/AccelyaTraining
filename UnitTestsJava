import java.util.Scanner; 
  
class Test 
{ 
    public static void main( String args[] ) 
    { 
        int value = 15; 
        assert value >= 20 : " Underweight"; 
        System.out.println("value is "+value); 
    } 
} 





public class Main {
//@BeforeClass
	static {
		System.out.println("Before class Main");
	}

	public static void main(String[] a) {
		testsquare();// manual unit testing
		testcube();
	}

	static int square(int x) {
		return x * x;
	}

	static int cube(int x) {
		return x * x * x;
	}

//@test
	static void testsquare() { // unit test functions: test cases
		fn();
		int aa = 10;
		if (square(aa) == 110) {
			System.out.println("Test succedded");
		} else
			System.err.println("Test failed");
		fna();
	}

//@test
	static void testcube() {
//unit test functions: test cases
		fn();
		int aa = 10;
		if (cube(aa) == 1000) {
			System.out.println("Test succedded");
		} else
			System.err.println("Test failed");
		fna();
	}

//@Before
	static void fn() {
		System.out.println("before Test cases ");
	}

//@after
	static void fna() {
		System.out.println("After Test cases ");
	}
}











class Emp{
	//Before Class loaded
	static {
		System.out.println("3. Whenever the Class Name is read by Javac (Only Once)");
	}
	
	//At every static fn call
	static void fn() {
		System.out.println("4. Whenever it is called : by the Class name");
	}
	
	//At every instance before construction of object
	{
		System.out.println("5. This is called before constructors of the class(every new Instatnce)");
	}
	
	//At Construction of objects
	Emp(){
		System.out.println("6. This is the constructor of the class(every new Instatnce)");
	}
	// Instance fn
	void fnIns() {
		System.out.println("7. Whenever it is called : by the Object");
	}
	
	//clean up process
	@Override
	protected void finalize() throws Throwable {
		System.out.println("8. This is the destructor of the class(every death of an Instatnce)");
	}
	
}
public class Main2 {
	static {
		System.out.println("1. This is Main's static block");
	}

	public static void main(String[] args) {
		System.out.println("2. This is Main's main() fn");
		Emp.fn(); 
		Emp emp=new Emp();
		emp.fnIns();
		emp = null;
		System.gc();
		System.out.println("9. This is Main's main() fn's end");
		

	}

}









The Junit 5.x framework is annotation based, so let's see the annotations that can be used while writing the test cases.
@Test annotation specifies that method is the test method.
@Test(timeout=1000) annotation specifies that method will be failed if it takes longer than 1000 milliseconds (1 second).
@BeforeClass annotation specifies that method will be invoked only once, before starting all the tests.
@Before annotation specifies that method will be invoked before each test.
@After annotation specifies that method will be invoked after each test.
@AfterClass annotation specifies that method will be invoked only once, after finishing all the tests.







The org.junit.Assert class provides methods to assert the program logic.
Methods of Assert class
void assertEquals(boolean expected,boolean actual): checks that two primitives/objects are equal. It is overloaded.
void assertTrue(boolean condition): checks that a condition is true.
void assertFalse(boolean condition): checks that a condition is false.
void assertNull(Object obj): checks that object is null.
void assertNotNull(Object obj): checks that object is not null.








Create a Java project : JUnitPrj
Add two packages:
source 
tests
Add the class file:
source/MainClass.java
Add the JUnit Class file:
tests/TestLogic.java
Add it as JUnit 4 Unit Test Cases
It will prompt to add the JUnit 5 library in the project. Add it.
tests/TestCases.java
Add the codes
Run TestLogic as JUnit Tests
Run TestCases as JUnit Tests
Add Test Suite to the project
Add both the Tests there
 Run it to get all tests Results together
Check the Result.
 




package source;
public class MainClass {
	public static int findMax(int arr[]) {
		int max = 0;
		// int max=arr[0];
		for (int i = 1; i < arr.length; i++) {
			if (max < arr[i])
				max = arr[i];
		}
		return max;
	}
	public static int cube(int n) {
		return n * n * n;
	}
}







package tests;
import source.*;
import static org.junit.Assert.*;
import org.junit.Test;

public class TestLogic {

	@Test
	public void test() {
		assertEquals(4,MainClass.findMax(new int[]{1,3,4,2}));

	}

}

























