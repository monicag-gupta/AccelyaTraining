npm install -g create-react-app


If error pops us for npm install,
Then run:

npm cache clean --force

Then try the npm install.










npx create-react-app my-react-app







cd my-react-app





npm start















Example 1 : JSX: index.js : 
import React from 'react';
import ReactDOM from 'react-dom/client';
const myElement = <h1>JSX is cool!</h1>;
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(myElement);



Example 2 : Without JSX:
import React from 'react';
import ReactDOM from 'react-dom/client';
const myElement = React.createElement('h1', {}, 'I do not use JSX!');
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(myElement);









import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

const myElement = <h1>React is {5 + 5} times better with JSX</h1>;
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(myElement);







import logo from './logo.svg';
import './App.css';

function App() {
  return (
    <>
      <h1>Hello World</h1> 
    </>
  );
}

export default App;







import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

// const myElement = <h1>React is {5 + 5} times better with JSX</h1>;
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App/>);











import logo from './logo.svg';
import './App.css';

function App2(){
  return (
    <>
    <h1>This is the child of APP</h1>
    </>
  );
}

function App() {
  return (
    <>
      <h1>Hello World</h1> 
      <App2/>
      <h2>Hello again!</h2>
    </>
  );
}

export default App;









import React from "react";
import ReactDOM from 'react-dom/client';
let i = 1;
const element = (
	<h1>{i == 1 ? "Hello World!" : "False!"} </h1>
);
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(element);








App.js

import React, { Component } from 'react';  
class App extends Component{  
   render(){  
     var myStyle = {  
         fontSize: 80,  
         fontFamily: 'Courier',  
         color: '#003300'  
      }  
      return (  
         <div>  
            <h1 style = {myStyle}>Hello World!</h1> 
         </div>  
      );  
   }  
}  
export default App; 





import React, { Component } from 'react';  
function App(){  
    
     var myStyle = {  
         fontSize: 80,  
         fontFamily: 'Courier',  
         color: '#003300'  
      }  
      return (  
         <div>  
            <h1 style = {myStyle}>Hello World!</h1> 
		        {/* This is a comment in JSX */}   

         </div>  
      );  
   }  
 
export default App; 





import React, { Component } from 'react';  
class  App extends Component{  
    render(){
     var myStyle = {  
         fontSize: 80,  
         fontFamily: 'Courier',  
         color: '#003300'  
      }  
      return (  
         <div>  
            <h1 style = {myStyle}>Hello World!</h1> 
                    {/* This is a comment in JSX */}   

         </div>  
      );  
   }  
  }
 
export default App; 








import React from "react";
import ReactDOM from 'react-dom/client';
import App from "./App";
let i = 1;
const element = (
	<h1>{i == 1 ? "Hello World!" : "False!"} </h1>
);
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App/>);








import React from 'react';
import ReactDOM from 'react-dom/client';
class Car extends React.Component {
  constructor() {
    super();
    this.state = {color: "red"};
  }
  render() {
    return <h2>I am a {this.state.color} Car!</h2>;
  }
}
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Car />);







import React from 'react';
import ReactDOM from 'react-dom/client';
class Car extends React.Component {
  constructor() {
    super();
    this.state = {myKey: "red"};
  }
  render() {
    var styles={color:this.state.myKey}
    return <h2 style={styles}>I am a {this.state.myKey} Car!</h2>;
  }
}
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Car />);








import React from 'react';
import ReactDOM from 'react-dom/client';

function Car(props) {
  return <h2>I am a {props.color} Car!</h2>;
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Car color="red"/>);










import React from 'react';
import ReactDOM from 'react-dom/client';
class Car extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return <h2>I am a {this.props.model}!</h2>;
  }
}
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<Car model="Mustang"/>);




