npm install --save-dev webpack @babel/plugin-syntax-dynamic-import





math.js

// math.js
export function add(a, b) {
  return a + b;
}




index.js

// index.js
import ReactDOM from "react-dom/client";
import { add } from "./math";
function App(){
  return(
    <h1>Add Called from math.js: <br/>
    {add(16, 26)}
    </h1>
  );
}
const root = ReactDOM.createRoot(document.getElementById('root')); 
root.render(<App />);





Bundle : index.js



import ReactDOM from "react-dom/client";
function add(a, b) {
  return a + b;
}

function App(){
  return(
    <h1>No Add Called from math.js: <br/>
     {add(16, 26)}
    </h1>
  );
}
const root = ReactDOM.createRoot(document.getElementById('root')); 
root.render(<App />);









Code Splitting : index.js

//index.js
import ReactDOM from "react-dom/client";
function App(){
  return(
    <h1>Add Called from math.js: <br/>
     {require('./math').add(16, 26)}
    </h1>
  );
}
const root = ReactDOM.createRoot(document.getElementById('root')); 
root.render(<App />);








//index.js
import ReactDOM from "react-dom/client";
import { useState } from "react";

function App(){
    const [a,setA] =useState(0);
    var clicked = ()=>{setA(require('./math').add(16, 26)); }
  return(
    <h1>Add Called from math.js: <br/>
    <button onClick={clicked}> click</button>
    {a}
    </h1>
  );
}
const root = ReactDOM.createRoot(document.getElementById('root')); 
root.render(<App />);






























