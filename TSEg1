npm install -g typescript


Open PowerShell as admin:
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned

Press A to have all apps remotely signed




console.log(num1) // undefined 	//Due to hoisting, we can access the num variable before the line of declaration through var; var has default value of undefined
var num1 = 50; //global var
console.log(num1) // 50
var num1 = 100; //possible var can be used for redefining
num1=200; //possible var can be used for reassigning

//console.log(num3); // ReferenceError: Cannot access 'num3' before initialization	
let num3 = 50;  //global let
//let num3 = 100; // SyntaxError: Identifier 'num3' has already been declared
num3 = 200; //possible, let can be used for reassigning
//console.log(num4); // ReferenceError: Cannot access 'num4' before initialization	
const num4 = 50;  //global const
//const num4 = 100; // SyntaxError: Identifier 'num4' has already been declared
//num4 = 200; // TypeError: Assignment to constant variable

function printa() {
    console.log(num2 * num2); //NaN
    var num2 = 50; //local var
    console.log(num2 * num2); //2500
    let square = num4 * num4;
    if (num4 < 60) {
        var largerNumber = 80; //local scope var
        const anotherLargerNumber = 100; //block scope const
        let anotherLargerNum = 100; //block scope let
        console.log(square) //2500
    } 		
    console.log(largerNumber); //80
    //console.log(anotherLargerNumber);// ReferenceError: anotherLargerNumber is not defined
    //console.log(anotherLargerNum); // ReferenceError: anotherLargerNum is not defined
}	printa();








let arr:string[] = new Array("TypeScript","JavaScript","Java","C++","C#");
console.log("arr: " + arr);
let arr2:string[] = new Array("MVC", "HTML5", "ECMAScript");
let arr3=arr.concat(arr2);
console.log("arr3 : " + arr3);
let arr4=arr.splice(2,5);
console.log("arr4 : " + arr4);
console.log("arr now is: " + arr);
arr = new Array("HTML5", "TypeScript","JavaScript","Java","C++","C#");
arr.push("CSS");
console.log("arr after push of 'CSS' at end : " + arr);
console.log("type of arr: " + (typeof arr));
console.log("Is arr instance of array? " + (arr instanceof Array));
console.log("Length of arr: " + arr.length);
console.log("Sorted arr: " + arr.sort());
console.log("Joining arr by space: " + arr.join(" "));
console.log("Reversed arr: " + arr.reverse());
console.log("Pop last element in arr: " + arr.pop());
console.log("shift first element in arr: " + arr.shift());
arr.unshift("Angular","ASP");
console.log("arr now is: " + arr);







let value: number|string;  
value = 120;  
console.log("The Numeric value of a value is: "+value);  
value = "Welcome to Typescript";  
console.log("The String value of a value is: "+value);
// The Numeric value of a value is: 120
// The String value of a value is: Welcome to Typescript







//In function, we can pass a union type as a parameter.
function display(value: (number | string))  
{  
    if(typeof(value) === "number")  
        console.log('The given value is of type number.');  
    else if(typeof(value) === "string")  
        console.log('The given value is of type string.');  
}  
display(123);  //The given value is of type number.
display("ABC");  //The given value is of type string.











//String Initialization  
let str1: string = 'Typescript';  
let str2: string = ' is great';  
let str3 = str1.concat(str2);
//String Concatenation  
console.log("Combined Result: " +str3); //Combined Result: Typescript is great 
//String charAt  
console.log("Character At 5: " +str2.charAt(5));  //Character At 5: r
//String indexOf  
console.log("Index of r: " +str2.indexOf('r'));  //Index of r: 5
//String replace  
console.log("After Replacement: " +str1.replace('Type', 'Java')); //After Replacement: Javascript 
//String uppercase  
console.log("UpperCase: " + str1.concat(str2).toUpperCase());  //UpperCase: TYPESCRIPT IS GREAT
let arr:string[] = str3.split(" "); 
console.log("The array after split, gives the words as: " + arr);
//The array after split, gives the words as: Typescript,is,great
console.log("Slicing 4th charater to 7th character: " + str1.slice(4,7)); //Slicing 4th charater to 7th character: scr
console.log("Trimming the spaces: " + str2.trim()); //Trimming the spaces: is great









let myArray = [10, 20, 30, 40, 50,];  
console.log("Output of for..in loop ");  
for (let index in myArray) {  
   console.log(index);  
}  
console.log("Output of for..of loop ");  
for (let val of myArray) {  
   console.log(val);  
}  







var msg = function() { 
   return "hello world";  
} 
var res = function(a:number,b:number) { 
   return a*b;  
}; 
console.log(res(12,2)) 
console.log(msg())

var myFunction = new Function("a", "b", "return a * b"); 
//Function is a constructor used here
var x = myFunction(4, 3); 
console.log(x);











function addNumbers(...nums:number[]) {  
   var i;   
   var sum:number = 0; 
   
   for(i = 0;i<nums.length;i++) { 
      sum = sum + nums[i]; 
   } 
   console.log("sum of the numbers",sum) 
} 
addNumbers(1,2,3) 
addNumbers(10,10,10,10,10)




















var foo1 = (x:number)=>10 + x 
console.log(foo1(100))  
    //outputs 110

var foo2 = (x:number)=> {    
   x = 20 + x 
   console.log(x)  
} 
foo2(100) 
// outputs 120

let Print = () => console.log("Hello Coders!");  
Print();  //Hello Coders!



















